

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
     vmImage: 'ubuntu-latest'
    steps:
    - task: TerraformTaskV4@4
      displayName: Terraform init 
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'Add_here' # replace your Azure_service_connection details in the place of Add_here
        backendAzureRmResourceGroupName: 'Add_here' # replace your Azure_resource_group details in the place of Add_here
        backendAzureRmStorageAccountName: 'Add_here' # replace your Azure_storage_account details in the place of Add_here
        backendAzureRmContainerName: 'Add_here' # replace your Azure_container details in the place of Add_here
        backendAzureRmKey: 'Add_here' # replace your Azure_backend_tfstate_file  details in the place of Add_here
        workingDirectory: '$(System.DefaultWorkingDirectory)/Infra-CICD-Terraform/TF-Files'
    
    - task: tfsec@1
      displayName: Terraform Scan
      continueOnError: true
      inputs:
        version: 'v1.26.0'
        dir: '$(System.DefaultWorkingDirectory)/Infra-CICD-Terraform/TF-Files'
            
    - bash: | 
        cp /tmp/tfsec-results-0*.* $(Build.SourcesDirectory)/Infra-CICD-Terraform/TF-Files/
        cd $(Build.SourcesDirectory)/Day8-infra-CICD/
        pwd
        ls -ltr
        cat $(Build.SourcesDirectory)/Infra-CICD-Terraform/TF-Files/tfsec-results-0*.json | jq
        cat $(Build.SourcesDirectory)/Infra-CICD-Terraform/TF-Files/tfsec-results-0*.junit
      displayName: Copying TFsec output
        
    - task: TerraformTaskV4@4
      displayName: Terraform validate
      inputs:
        provider: 'azurerm'
        command: 'validate'
        workingDirectory: '$(System.DefaultWorkingDirectory)/Infra-CICD-Terraform/TF-Files'
    
    - task: TerraformTaskV4@4
      displayName: Terraform format
      inputs:
        provider: 'azurerm'
        command: 'custom'
        outputTo: 'console'
        customCommand: 'fmt'
        workingDirectory: '$(System.DefaultWorkingDirectory)/Infra-CICD-Terraform/TF-Files'
        environmentServiceNameAzureRM: 'Add_here' # replace your Azure_service_connection details in the place of Add_here
    
    - task: TerraformTaskV4@4
      displayName: Terraform plan
      inputs:
        provider: 'azurerm'
        command: 'plan'
        commandOptions: '-out $(Build.SourcesDirectory)/Infra-CICD-Terraform/TF-Files/tfplanfile'
        workingDirectory: '$(System.DefaultWorkingDirectory)/Infra-CICD-Terraform/TF-Files'
        environmentServiceNameAzureRM: 'Add_here' # replace your Azure_service_connection details in the place of Add_here
    
    - task: InfracostSetup@2
      displayName: Infra cost Install
      inputs:
        apiKey: $(INFRACOST_API_KEY) # Add your api key for the Infracost connection
        version: '0.10.x'
        currency: 'INR'
        
    - bash: |
        cd $(System.DefaultWorkingDirectory)/Infra-CICD-Terraform/TF-Files
        infracost breakdown --path . \
              --format=table \
              --out-file=$(Build.SourcesDirectory)/Infra-CICD-Terraform/TF-Files/infracost-base.json
        cat $(Build.SourcesDirectory)/Infra-CICD-Terraform/TF-Files/infracost-base.json
      displayName: Generate Infracost cost estimate baseline

    - task: ArchiveFiles@2
      displayName: Archive Files
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)/Infra-CICD-Terraform/TF-Files/'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: '$(Build.BuildId)-buildid'
        publishLocation: 'Container'
    
    
    
